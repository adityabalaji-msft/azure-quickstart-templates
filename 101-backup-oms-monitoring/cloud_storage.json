{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspaceLocation": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specify the workspace region"
            }
        },
        "workspaceName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specify the workspace name"
            }
        }
    },
    "variables": {
        "omsSolutions": {
            "customSolution": {
                "name": "Azure Backup Monitoring Solution",
                "solutionName": "[concat('AzureBackup', '[', parameters('workspaceName'), ']')]",
                "publisher": "Microsoft",
                "displayName": "Azure Backup Monitoring Solution",
                "description": "Monitor and analyze your Backup Vaults",
                "author": "Microsoft"
            }
        }
    },
    "resources": 
    [
        {
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('workspaceName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "location": "[parameters('workspaceLocation')]",
            "resources": [
                
                {

                    "apiVersion": "2015-11-01-preview",
                    "name": "[concat(parameters('workspaceName'), '/', 'Cloud Storage')]",
                    "type": "Microsoft.OperationalInsights/workspaces/views",
                    "location": "[parameters('workspaceLocation')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                    ],
                    "properties": {
                        "Id": "Cloud Storage",
                        "Name": "Cloud Storage",
                        "Author": null,
                        "Source": "Local",
                        "Version": 2,
                        "Dashboard": [
                            {
                                "Id": "TwoTrendsAndListBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Total Cloud Storage Consumed (GB)",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Trend1": {
                                        "Legend": "GRS",
                                        "LegendColor": "#00188f",
                                        "ChartQuery": " let VaultIdRepMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Vault\" | where StorageReplicationType_s != \"\" | summarize arg_max(TimeGenerated, *) by VaultUniqueId_s | where StorageReplicationType_s == \"GeoRedundant\" ; let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, VaultUniqueId_s, StorageUniqueId_s, TimeGenerated ) on BackupItemUniqueId_s | join kind=inner (VaultIdRepMap) on VaultUniqueId_s| join kind=inner ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Storage\" | summarize arg_max(TimeGenerated, *) by StorageUniqueId_s | project StorageUniqueId_s, StorageType_s| extend storage_type=StorageType_s ) on StorageUniqueId_s | where storage_type==\"Cloud\" | summarize dayCharge = avg(StorageInGB) by BackupItemUniqueId_s, bin(TimeGenerated, 1d) | summarize TotalCharge = sum(dayCharge) by bin(TimeGenerated, 1d)",
                                        "Calculation": {
                                            "Operation": "Sum"
                                        }
                                    },
                                    "Trend2": {
                                        "Legend": "LRS",
                                        "LegendColor": "#0072c6",
                                        "ChartQuery": " let VaultIdRepMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Vault\" | where StorageReplicationType_s != \"\" | summarize arg_max(TimeGenerated, *) by VaultUniqueId_s | where StorageReplicationType_s == \"LocallyRedundant\" ; let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, VaultUniqueId_s, StorageUniqueId_s, TimeGenerated ) on BackupItemUniqueId_s | join kind=inner (VaultIdRepMap) on VaultUniqueId_s| join kind=inner ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Storage\" | summarize arg_max(TimeGenerated, *) by StorageUniqueId_s | project StorageUniqueId_s, StorageType_s| extend storage_type=StorageType_s ) on StorageUniqueId_s | where storage_type==\"Cloud\" | summarize dayCharge = avg(StorageInGB) by BackupItemUniqueId_s, bin(TimeGenerated, 1d) | summarize TotalCharge = sum(dayCharge) by bin(TimeGenerated, 1d)",
                                        "Calculation": {
                                            "Operation": "Sum"
                                        }
                                    },
                                    "List": {
                                        "Query": " let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s, StorageUniqueId_s) on BackupItemUniqueId_s | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, StorageUniqueId_s | join kind=inner ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Storage\" | distinct StorageUniqueId_s, StorageType_s | project StorageUniqueId_s, StorageType_s ) on StorageUniqueId_s | project StorageInGB, BackupItemUniqueId_s, StorageType_s | join kind=leftouter ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s | project BackupItemUniqueId_s, BackupItemFriendlyName_s ) on BackupItemUniqueId_s |where StorageType_s==\"Cloud\" | project StorageInGB, BackupItemFriendlyName_s, BackupItemUniqueId_s | order by StorageInGB desc",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "ColumnsTitle": {
                                            "Name": "Backup Item Name",
                                            "Value": "Storage (GB)"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": " let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s, StorageUniqueId_s) on BackupItemUniqueId_s | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, StorageUniqueId_s | join kind=inner ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Storage\" | distinct StorageUniqueId_s, StorageType_s | project StorageUniqueId_s, StorageType_s ) on StorageUniqueId_s | project StorageInGB, BackupItemUniqueId_s, StorageType_s | join kind=leftouter ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s | project BackupItemUniqueId_s, BackupItemFriendlyName_s ) on BackupItemUniqueId_s |where StorageType_s==\"Cloud\" | search {selected item}",
                                        "NavigationSelect": {
                                            "NavigationQuery": " let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s, StorageUniqueId_s) on BackupItemUniqueId_s | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, StorageUniqueId_s | join kind=inner ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Storage\" | distinct StorageUniqueId_s, StorageType_s | project StorageUniqueId_s, StorageType_s ) on StorageUniqueId_s | project StorageInGB, BackupItemUniqueId_s, StorageType_s | join kind=leftouter ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s | project BackupItemUniqueId_s, BackupItemFriendlyName_s ) on BackupItemUniqueId_s |where StorageType_s==\"Cloud\" | search {selected item}"
                                        }
                                    },
                                    "Blade": {
                                        "NavigationSelect": {}
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Top 5 Vaults by Storage Consumed (GB)",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Top 5 Vaults by Storage Consumed (GB)",
                                        "Subtitle": "Filter by Datasource Type by clicking the (+) above"
                                    },
                                    "Donut": {
                                        "Query": " let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, StorageUniqueId_s, TimeGenerated | join kind=inner ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Storage\" | summarize arg_max(TimeGenerated,*) by StorageUniqueId_s | project StorageUniqueId_s, StorageName_s ,BackupItemUniqueId_s, StorageType_s ) on StorageUniqueId_s | where StorageType_s==\"Cloud\" | join(BackupIdTypeMap) on BackupItemUniqueId_s | project StorageName_s, StorageInGB, BackupItemType_s | sort by StorageInGB desc",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": []
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": " let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, StorageUniqueId_s, TimeGenerated | join kind=inner ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Storage\" | summarize arg_max(TimeGenerated,*) by StorageUniqueId_s | project StorageUniqueId_s, StorageName_s ,BackupItemUniqueId_s, StorageType_s ) on StorageUniqueId_s | where StorageType_s==\"Cloud\" | join(BackupIdTypeMap) on BackupItemUniqueId_s | project StorageName_s, StorageInGB| sort by StorageInGB desc",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Vault",
                                            "Value": "Storage In GB"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": " let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, StorageUniqueId_s, TimeGenerated | join kind=inner ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Storage\" | summarize arg_max(TimeGenerated,*) by StorageUniqueId_s | project StorageUniqueId_s, StorageName_s ,BackupItemUniqueId_s, StorageType_s ) on StorageUniqueId_s | where StorageType_s==\"Cloud\" | join(BackupIdTypeMap) on BackupItemUniqueId_s | search {selected item}",
                                        "NavigationSelect": {
                                            "NavigationQuery": " let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, StorageUniqueId_s, TimeGenerated | join kind=inner ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Storage\" | summarize arg_max(TimeGenerated,*) by StorageUniqueId_s | project StorageUniqueId_s, StorageName_s ,BackupItemUniqueId_s, StorageType_s ) on StorageUniqueId_s | where StorageType_s==\"Cloud\" | join(BackupIdTypeMap) on BackupItemUniqueId_s | search {selected item}"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Storage by Storage Replication type (GB)",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Storage by Storage Replication type (GB)",
                                        "Subtitle": ""
                                    },
                                    "Donut": {
                                        "Query": " let VaultIdRepMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Vault\" | where StorageReplicationType_s != \"\" | summarize arg_max(TimeGenerated, *) by VaultUniqueId_s; let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, VaultUniqueId_s, StorageUniqueId_s, TimeGenerated ) on BackupItemUniqueId_s | join kind=inner (VaultIdRepMap) on VaultUniqueId_s| join kind=inner ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Storage\" | summarize arg_max(TimeGenerated, *) by StorageUniqueId_s | project StorageUniqueId_s, StorageType_s, StorageReplicationType_s| extend storage_type=StorageType_s ) on StorageUniqueId_s | where storage_type==\"Cloud\" | summarize arg_max(TimeGenerated,*) by BackupItemUniqueId_s, StorageReplicationType_s, bin(TimeGenerated, 1d) | summarize TotalCharge = sum(StorageInGB) by StorageReplicationType_s",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": []
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": " let VaultIdRepMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Vault\" | where StorageReplicationType_s != \"\" | summarize arg_max(TimeGenerated, *) by VaultUniqueId_s; let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, VaultUniqueId_s, StorageUniqueId_s, TimeGenerated ) on BackupItemUniqueId_s | join kind=inner (VaultIdRepMap) on VaultUniqueId_s| join kind=inner ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Storage\" | summarize arg_max(TimeGenerated, *) by StorageUniqueId_s | project StorageUniqueId_s, StorageType_s, StorageReplicationType_s| extend storage_type=StorageType_s ) on StorageUniqueId_s | where storage_type==\"Cloud\" | summarize arg_max(TimeGenerated,*) by BackupItemUniqueId_s, StorageReplicationType_s, bin(TimeGenerated, 1d) | summarize TotalCharge = sum(StorageInGB) by StorageReplicationType_s",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Replication Type",
                                            "Value": "Storage (GB)"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": " let VaultIdRepMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Vault\" | where StorageReplicationType_s != \"\" | summarize arg_max(TimeGenerated, *) by VaultUniqueId_s; let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, VaultUniqueId_s, StorageUniqueId_s, TimeGenerated ) on BackupItemUniqueId_s | join kind=inner (VaultIdRepMap) on VaultUniqueId_s| join kind=inner ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Storage\" | summarize arg_max(TimeGenerated, *) by StorageUniqueId_s | project StorageUniqueId_s, StorageType_s, StorageReplicationType_s| extend storage_type=StorageType_s ) on StorageUniqueId_s | where storage_type==\"Cloud\" | summarize arg_max(TimeGenerated,*) by BackupItemUniqueId_s, StorageReplicationType_s, bin(TimeGenerated, 1d) | summarize TotalCharge = sum(StorageInGB) by StorageReplicationType_s | search {selected item}",
                                        "NavigationSelect": {
                                            "NavigationQuery": " let VaultIdRepMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Vault\" | where StorageReplicationType_s != \"\" | summarize arg_max(TimeGenerated, *) by VaultUniqueId_s; let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, VaultUniqueId_s, StorageUniqueId_s, TimeGenerated ) on BackupItemUniqueId_s | join kind=inner (VaultIdRepMap) on VaultUniqueId_s| join kind=inner ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Storage\" | summarize arg_max(TimeGenerated, *) by StorageUniqueId_s | project StorageUniqueId_s, StorageType_s, StorageReplicationType_s| extend storage_type=StorageType_s ) on StorageUniqueId_s | where storage_type==\"Cloud\" | summarize arg_max(TimeGenerated,*) by BackupItemUniqueId_s, StorageReplicationType_s, bin(TimeGenerated, 1d) | summarize TotalCharge = sum(StorageInGB) by StorageReplicationType_s | search {selected item}"
                                        }
                                    }
                                }
                            }
                        ],
                        "Filters": [
                            {
                                "FieldName": "BackupItemType_s",
                                "QueryForValues": "AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | distinct BackupItemType_s",
                                "Title": "DatasourceType"
                            }
                        ],
                        "OverviewTile": {
                            "Id": "SingleNumberBuilderTile",
                            "Type": "OverviewTile",
                            "Version": 2,
                            "Configuration": {
                                "Tile": {
                                    "Legend": "Total Cloud Storage Consumed (GB)",
                                    "Query": "AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | extend CloudStorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project CloudStorageInGB, BackupItemUniqueId_s, StorageUniqueId_s, TimeGenerated | join kind=inner ( AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Storage\" | distinct StorageUniqueId_s, StorageType_s | project StorageUniqueId_s, StorageType_s ) on StorageUniqueId_s | where StorageType_s == \"Cloud\" | summarize arg_max(TimeGenerated, *) by StorageUniqueId_s | summarize sum(CloudStorageInGB)"
                                },
                                "Advanced": {
                                    "DataFlowVerification": {
                                        "Enabled": false,
                                        "Query": "search * | limit 1 | project TimeGenerated",
                                        "Message": ""
                                    }
                                }
                            }
                        }
                    }
                }
            ]
        }
    ]   
}
