{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspaceLocation": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specify the workspace region"
            }
        },
        "workspaceName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specify the workspace name"
            }
        }
    },
    "variables": {
        "omsSolutions": {
            "customSolution": {
                "name": "Azure Backup Monitoring Solution",
                "solutionName": "[concat('AzureBackup', '[', parameters('workspaceName'), ']')]",
                "publisher": "Microsoft",
                "displayName": "Azure Backup Monitoring Solution",
                "description": "Monitor and analyze your Backup Vaults",
                "author": "Microsoft"
            }
        }
    },
    "resources": 
    [
        {
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('workspaceName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "location": "[parameters('workspaceLocation')]",
            "resources": [
                

                {
                    "apiVersion": "2015-11-01-preview",
                    "name": "[concat(parameters('workspaceName'), '/', 'Backup Jobs (Log)')]",
                    "type": "Microsoft.OperationalInsights/workspaces/views",
                    "location": "[parameters('workspaceLocation')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                    ],
                    "properties": {
                        "Id": "Backup Jobs (Log)",
                        "Name": "Backup Jobs (Log)",
                        "Author": null,
                        "Source": "Local",
                        "Version": 2,
                        "Dashboard": [{
                                "Id": "LineChartBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Total Jobs by Job Status",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Job Status",
                                        "Subtitle": "Filter by Datasource Type by clicking the (+) above"
                                    },
                                    "LineChart": {
                                        "Query": " let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let Jobs=AzureDiagnostics | where Category == \"AzureBackupReport\"| where OperationName==\"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where JobUniqueId_g!=\"\"; BackupIdTypeMap| join(Jobs) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize arg_max(TimeGenerated, *) by JobUniqueId_g | summarize count(JobUniqueId_g) by bin(TimeGenerated, 1h) , JobStatus_s | sort by count_JobUniqueId_g desc",
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": " let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let Jobs=AzureDiagnostics | where Category == \"AzureBackupReport\"|extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where OperationName==\"Job\" | where JobUniqueId_g!=\"\"; BackupIdTypeMap| join(Jobs) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize arg_max(TimeGenerated, *) by JobUniqueId_g | summarize count(JobUniqueId_g) by JobStatus_s | sort by count_JobUniqueId_g desc",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "ColumnsTitle": {
                                            "Name": "Job Status",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [{
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                }, {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                }, {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": " let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let Jobs=AzureDiagnostics | where Category == \"AzureBackupReport\"|extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where OperationName==\"Job\" | where JobUniqueId_g!=\"\"; BackupIdTypeMap| join(Jobs) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize arg_max(TimeGenerated, *) by JobUniqueId_g | summarize count(JobUniqueId_g) by JobStatus_s | sort by count_JobUniqueId_g desc | search {selected item} ",
                                        "NavigationSelect": {
                                            "NavigationQuery": " let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let Jobs=AzureDiagnostics | where Category == \"AzureBackupReport\"|extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where OperationName==\"Job\" | where JobUniqueId_g!=\"\"; BackupIdTypeMap| join(Jobs) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize arg_max(TimeGenerated, *) by JobUniqueId_g | summarize count(JobUniqueId_g) by JobStatus_s | sort by count_JobUniqueId_g desc | search {selected item} "
                                        }
                                    }
                                }
                            }, {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Failed Jobs by Failure Code",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Failed jobs by Failure Code",
                                        "Subtitle": "Filter by Datasource Type by clicking the (+) above"
                                    },
                                    "Donut": {
                                        "Query": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let Jobs=AzureDiagnostics | where Category == \"AzureBackupReport\"| extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where JobUniqueId_g!=\"\"; BackupIdTypeMap | join (Jobs) on BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by JobUniqueId_g | where JobStatus_s == \"Failed\" | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize count(JobUniqueId_g) by JobFailureCode_s |sort by count_JobUniqueId_g desc ",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": []
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let Jobs=AzureDiagnostics | where Category == \"AzureBackupReport\"|extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where OperationName==\"Job\" | where JobUniqueId_g!=\"\"; BackupIdTypeMap | join (Jobs) on BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by JobUniqueId_g | where JobStatus_s == \"Failed\" | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize count(JobUniqueId_g) by JobFailureCode_s |sort by count_JobUniqueId_g desc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Computer",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [{
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                }, {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                }, {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let Jobs=AzureDiagnostics | where Category == \"AzureBackupReport\"|extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where OperationName==\"Job\" | where JobUniqueId_g!=\"\"; BackupIdTypeMap | join (Jobs) on BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by JobUniqueId_g | where JobStatus_s == \"Failed\" | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize count(JobUniqueId_g) by JobFailureCode_s |sort by count_JobUniqueId_g desc |search {selected item} ",
                                        "NavigationSelect": {
                                            "NavigationQuery": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let Jobs=AzureDiagnostics | where Category == \"AzureBackupReport\"|extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where OperationName==\"Job\" | where JobUniqueId_g!=\"\"; BackupIdTypeMap | join (Jobs) on BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by JobUniqueId_g | where JobStatus_s == \"Failed\" | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize count(JobUniqueId_g) by JobFailureCode_s |sort by count_JobUniqueId_g desc |search {selected item} "
                                        }
                                    }
                                }
                            }, {
                                "Id": "NumberTileListBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Jobs by Job Creation Time",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Tile": {
                                        "Query": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where OperationName==\"Job\" | where JobUniqueId_g!=\"\") on BackupItemUniqueId_s| summarize arg_max(TimeGenerated, *) by JobUniqueId_g | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | count",
                                        "Legend": "Total no of jobs",
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join (AzureDiagnostics | where Category == \"AzureBackupReport\"|extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where OperationName==\"Job\"| where JobUniqueId_g!=\"\"| summarize arg_max(TimeGenerated, *) by JobUniqueId_g) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\"| where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | extend timeOfDay=datetime_part(\"Hour\",TimeGenerated) | summarize count(JobUniqueId_g) by bin(timeOfDay,3) | extend timeBucketStart24 = iff(timeOfDay-1.5>0,timeOfDay-1.5,timeOfDay-1.5+24), timeBucketEnd24=iff(timeOfDay+1.5<24,timeOfDay+1.5,timeOfDay+1.5-24) | extend timeBucketStart12=iff(timeBucketStart24>12,timeBucketStart24-12, timeBucketStart24) , timeBucketStartMeridian = iff(timeBucketStart24<12,\"AM\", iff(timeBucketStart24<24,\"PM\",\"AM\")), timeBucketEnd12=iff(timeBucketEnd24>12,timeBucketEnd24-12, timeBucketEnd24) , timeBucketEndMeridian = iff(timeBucketEnd24<12,\"AM\", iff(timeBucketEnd24<24,\"PM\",\"AM\")) | project timeBucketStart24, timeBucketStart12 , timeBucketEnd12 , timeBucketStartMeridian , timeBucketEndMeridian , count_JobUniqueId_g | extend timeBucketStartHr=toint(timeBucketStart12), timeBucketStartMin=toint((timeBucketStart12-floor(timeBucketStart12,1))*60), timeBucketEndHr=toint(timeBucketEnd12), timeBucketEndMin=toint((timeBucketEnd12-floor(timeBucketEnd12,1))*60)| extend timeBucketStartMinString=iff(timeBucketStartMin>9,tostring(timeBucketStartMin),iff(timeBucketStartMin>0,strcat(\"0\",timeBucketStartMin), \"00\")), timeBucketEndMinString=iff(timeBucketEndMin>9,tostring(timeBucketEndMin),iff(timeBucketEndMin>0,strcat(\"0\",timeBucketEndMin), \"00\")) | extend timeBucketString = strcat(tostring(timeBucketStartHr),\":\",timeBucketStartMinString,timeBucketStartMeridian, \"-\",tostring(timeBucketEndHr), \":\", timeBucketEndMinString,timeBucketEndMeridian) |project timeBucketString , count_JobUniqueId_g |sort by count_JobUniqueId_g desc",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Time of Day",
                                            "Value": "No of Jobs"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [{
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                }, {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                }, {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join (AzureDiagnostics | where Category == \"AzureBackupReport\"|extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where OperationName==\"Job\" | where JobUniqueId_g!=\"\"| summarize arg_max(TimeGenerated, *) by JobUniqueId_g) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | extend timeOfDay=datetime_part(\"Hour\",TimeGenerated) | summarize count(JobUniqueId_g) by bin(timeOfDay,3) | extend timeBucketStart24 = iff(timeOfDay-1.5>0,timeOfDay-1.5,timeOfDay-1.5+24), timeBucketEnd24=iff(timeOfDay+1.5<24,timeOfDay+1.5,timeOfDay+1.5-24) | extend timeBucketStart12=iff(timeBucketStart24>12,timeBucketStart24-12, timeBucketStart24) , timeBucketStartMeridian = iff(timeBucketStart24<12,\"AM\", iff(timeBucketStart24<24,\"PM\",\"AM\")), timeBucketEnd12=iff(timeBucketEnd24>12,timeBucketEnd24-12, timeBucketEnd24) , timeBucketEndMeridian = iff(timeBucketEnd24<12,\"AM\", iff(timeBucketEnd24<24,\"PM\",\"AM\")) | project timeBucketStart24, timeBucketStart12 , timeBucketEnd12 , timeBucketStartMeridian , timeBucketEndMeridian , count_JobUniqueId_g | extend timeBucketStartHr=toint(timeBucketStart12), timeBucketStartMin=toint((timeBucketStart12-floor(timeBucketStart12,1))*60), timeBucketEndHr=toint(timeBucketEnd12), timeBucketEndMin=toint((timeBucketEnd12-floor(timeBucketEnd12,1))*60)| extend timeBucketStartMinString=iff(timeBucketStartMin>9,tostring(timeBucketStartMin),iff(timeBucketStartMin>0,strcat(\"0\",timeBucketStartMin), \"00\")), timeBucketEndMinString=iff(timeBucketEndMin>9,tostring(timeBucketEndMin),iff(timeBucketEndMin>0,strcat(\"0\",timeBucketEndMin), \"00\")) | extend timeBucketString = strcat(tostring(timeBucketStartHr),\":\",timeBucketStartMinString,timeBucketStartMeridian, \"-\",tostring(timeBucketEndHr), \":\", timeBucketEndMinString,timeBucketEndMeridian) |project timeBucketString , count_JobUniqueId_g |sort by count_JobUniqueId_g desc | search {selected item}",
                                        "NavigationSelect": {
                                            "NavigationQuery": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join (AzureDiagnostics | where Category == \"AzureBackupReport\"|extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where OperationName==\"Job\" | where JobUniqueId_g!=\"\"| summarize arg_max(TimeGenerated, *) by JobUniqueId_g) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | extend timeOfDay=datetime_part(\"Hour\",TimeGenerated) | summarize count(JobUniqueId_g) by bin(timeOfDay,3) | extend timeBucketStart24 = iff(timeOfDay-1.5>0,timeOfDay-1.5,timeOfDay-1.5+24), timeBucketEnd24=iff(timeOfDay+1.5<24,timeOfDay+1.5,timeOfDay+1.5-24) | extend timeBucketStart12=iff(timeBucketStart24>12,timeBucketStart24-12, timeBucketStart24) , timeBucketStartMeridian = iff(timeBucketStart24<12,\"AM\", iff(timeBucketStart24<24,\"PM\",\"AM\")), timeBucketEnd12=iff(timeBucketEnd24>12,timeBucketEnd24-12, timeBucketEnd24) , timeBucketEndMeridian = iff(timeBucketEnd24<12,\"AM\", iff(timeBucketEnd24<24,\"PM\",\"AM\")) | project timeBucketStart24, timeBucketStart12 , timeBucketEnd12 , timeBucketStartMeridian , timeBucketEndMeridian , count_JobUniqueId_g | extend timeBucketStartHr=toint(timeBucketStart12), timeBucketStartMin=toint((timeBucketStart12-floor(timeBucketStart12,1))*60), timeBucketEndHr=toint(timeBucketEnd12), timeBucketEndMin=toint((timeBucketEnd12-floor(timeBucketEnd12,1))*60)| extend timeBucketStartMinString=iff(timeBucketStartMin>9,tostring(timeBucketStartMin),iff(timeBucketStartMin>0,strcat(\"0\",timeBucketStartMin), \"00\")), timeBucketEndMinString=iff(timeBucketEndMin>9,tostring(timeBucketEndMin),iff(timeBucketEndMin>0,strcat(\"0\",timeBucketEndMin), \"00\")) | extend timeBucketString = strcat(tostring(timeBucketStartHr),\":\",timeBucketStartMinString,timeBucketStartMeridian, \"-\",tostring(timeBucketEndHr), \":\", timeBucketEndMinString,timeBucketEndMeridian) |project timeBucketString , count_JobUniqueId_g |sort by count_JobUniqueId_g desc | search {selected item}"
                                        }
                                    }
                                }
                            }, {
                                "Id": "SingleQueryDonutBuilderBladeV1",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Top 3 Backup Items by Job Duration",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Total Job Duration (Hrs)",
                                        "Subtitle": "Filter by Datasource Type by clicking the (+) above"
                                    },
                                    "Donut": {
                                        "Query": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where BackupItemFriendlyName_s != \"\" | project TimeGenerated, BackupItemType_s, BackupItemFriendlyName_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let ContainerIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where ProtectedContainerFriendlyName_s != \"\" | project TimeGenerated, ProtectedContainerFriendlyName_s , ProtectedContainerUniqueId_s, BackupItemType_s | summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId_s; let Jobs = AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName==\"Job\" | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | summarize arg_max(TimeGenerated, *) by JobUniqueId_g | project BackupItemUniqueId_s, JobUniqueId_g , JobDurationInSecs_s, ProtectedContainerUniqueId_s; let Table1 = Jobs | join kind=leftouter (ContainerIdNameMap) on ProtectedContainerUniqueId_s; let Table2 = BackupIdNameMap | join (Table1) on BackupItemUniqueId_s; Table2 | where ${DatasourceType} |where BackupItemFriendlyName_s !=\"\" | summarize totalDurationInHrs = round(sum(todouble(JobDurationInSecs_s)/3600),2) by BackupItemFriendlyName_s | sort by totalDurationInHrs desc",
                                        "CenterLegend": {
                                            "Text": "Total",
                                            "Operation": "Sum",
                                            "ArcsToSelect": []
                                        },
                                        "Options": {
                                            "colors": [
                                                "#00188f",
                                                "#0072c6",
                                                "#00bcf2"
                                            ],
                                            "valueColorMapping": []
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where BackupItemFriendlyName_s != \"\" | project TimeGenerated, BackupItemType_s, BackupItemFriendlyName_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let ContainerIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where ProtectedContainerFriendlyName_s != \"\" | project TimeGenerated, ProtectedContainerFriendlyName_s , ProtectedContainerUniqueId_s, BackupItemType_s | summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId_s; let Jobs = AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName==\"Job\" | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | summarize arg_max(TimeGenerated, *) by JobUniqueId_g | project BackupItemUniqueId_s, JobUniqueId_g , JobDurationInSecs_s, ProtectedContainerUniqueId_s; let Table1 = Jobs | join kind=leftouter (ContainerIdNameMap) on ProtectedContainerUniqueId_s; let Table2 = BackupIdNameMap | join (Table1) on BackupItemUniqueId_s; Table2 | where ${DatasourceType} |where BackupItemFriendlyName_s !=\"\" | summarize totalDurationInHrs = round(sum(todouble(JobDurationInSecs_s)/3600),2) by BackupItemFriendlyName_s | sort by totalDurationInHrs desc",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Backup Item",
                                            "Value": "Total Job Duration (hrs)"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [{
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                }, {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                }, {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where BackupItemFriendlyName_s != \"\" | project TimeGenerated, BackupItemType_s, BackupItemFriendlyName_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let ContainerIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where ProtectedContainerFriendlyName_s != \"\" | project TimeGenerated, ProtectedContainerFriendlyName_s , ProtectedContainerUniqueId_s, BackupItemType_s | summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId_s; let Jobs = AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName==\"Job\" | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | summarize arg_max(TimeGenerated, *) by JobUniqueId_g | project BackupItemUniqueId_s, JobUniqueId_g , JobDurationInSecs_s, ProtectedContainerUniqueId_s; let Table1 = Jobs | join kind=leftouter (ContainerIdNameMap) on ProtectedContainerUniqueId_s; let Table2 = BackupIdNameMap | join (Table1) on BackupItemUniqueId_s; Table2 | where ${DatasourceType} |where BackupItemFriendlyName_s !=\"\" | summarize totalDurationInHrs = round(sum(todouble(JobDurationInSecs_s)/3600),2) by BackupItemFriendlyName_s | sort by totalDurationInHrs desc | search {selected item}",
                                        "NavigationSelect": {
                                            "NavigationQuery": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where BackupItemFriendlyName_s != \"\" | project TimeGenerated, BackupItemType_s, BackupItemFriendlyName_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let ContainerIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where ProtectedContainerFriendlyName_s != \"\" | project TimeGenerated, ProtectedContainerFriendlyName_s , ProtectedContainerUniqueId_s, BackupItemType_s | summarize arg_max(TimeGenerated, *) by ProtectedContainerUniqueId_s; let Jobs = AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName==\"Job\" | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | summarize arg_max(TimeGenerated, *) by JobUniqueId_g | project BackupItemUniqueId_s, JobUniqueId_g , JobDurationInSecs_s, ProtectedContainerUniqueId_s; let Table1 = Jobs | join kind=leftouter (ContainerIdNameMap) on ProtectedContainerUniqueId_s; let Table2 = BackupIdNameMap | join (Table1) on BackupItemUniqueId_s; Table2 | where ${DatasourceType} |where BackupItemFriendlyName_s !=\"\" | summarize totalDurationInHrs = round(sum(todouble(JobDurationInSecs_s)/3600),2) by BackupItemFriendlyName_s | sort by totalDurationInHrs desc | search {selected item}"
                                        }
                                    }
                                }
                            }, {
                                "Id": "NumberTileListBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Jobs by Job Duration",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Tile": {
                                        "Query": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")| where OperationName==\"Job\" | where JobUniqueId_g!=\"\"| summarize arg_max(TimeGenerated, *) by JobUniqueId_g) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | count",
                                        "Legend": "Total no of jobs",
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize dcount(JobUniqueId_g) by bin(todouble(JobDurationInSecs_s), 600) | extend JobDurationInMin = todouble(JobDurationInSecs_s) / 60 | extend JobDurationLowerLimit=iff(JobDurationInMin>5,JobDurationInMin - 5,todouble(0)), JobDurationUpperLimit = JobDurationInMin + 5 | extend JobDurationString=strcat(tostring(JobDurationLowerLimit),\" to \",tostring(JobDurationUpperLimit), \" min\") | project JobDurationString , dcount_JobUniqueId_g | sort by dcount_JobUniqueId_g desc",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Job Duration",
                                            "Value": "No of Jobs"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [{
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                }, {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                }, {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize dcount(JobUniqueId_g) by bin(todouble(JobDurationInSecs_s), 600) | extend JobDurationInMin = todouble(JobDurationInSecs_s) / 60 | extend JobDurationLowerLimit=iff(JobDurationInMin>5,JobDurationInMin - 5,todouble(0)), JobDurationUpperLimit = JobDurationInMin + 5 | extend JobDurationString=strcat(tostring(JobDurationLowerLimit),\" to \",tostring(JobDurationUpperLimit), \" min\") | project JobDurationString , dcount_JobUniqueId_g | sort by dcount_JobUniqueId_g desc | search {selected item}",
                                        "NavigationSelect": {
                                            "NavigationQuery": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\")) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize dcount(JobUniqueId_g) by bin(todouble(JobDurationInSecs_s), 600) | extend JobDurationInMin = todouble(JobDurationInSecs_s) / 60 | extend JobDurationLowerLimit=iff(JobDurationInMin>5,JobDurationInMin - 5,todouble(0)), JobDurationUpperLimit = JobDurationInMin + 5 | extend JobDurationString=strcat(tostring(JobDurationLowerLimit),\" to \",tostring(JobDurationUpperLimit), \" min\") | project JobDurationString , dcount_JobUniqueId_g | sort by dcount_JobUniqueId_g desc | search {selected item}"
                                        }
                                    }
                                }
                            }, {
                                "Id": "LineChartBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Jobs by Total Data Transferred",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Jobs by Total Data Transferred (MB)",
                                        "Subtitle": "Filter by Datasource Type by clicking the (+) above"
                                    },
                                    "LineChart": {
                                        "Query": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join (AzureDiagnostics | where Category == \"AzureBackupReport\"| extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName == \"Job\" | summarize arg_max(TimeGenerated, *) by JobUniqueId_g) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize sum(todouble(DataTransferredInMB_s)) by bin(TimeGenerated, 1d), JobOperation_s ",
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName == \"Job\" | summarize arg_max(TimeGenerated, *) by JobUniqueId_g) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize totalDataTransferred=sum(todouble(DataTransferredInMB_s)) by JobOperation_s | sort by totalDataTransferred desc ",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Operation",
                                            "Value": "Total Data Transferred (MB)"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [{
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                }, {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                }, {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName == \"Job\" | summarize arg_max(TimeGenerated, *) by JobUniqueId_g) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize totalDataTransferred=sum(todouble(DataTransferredInMB_s)) by JobOperation_s | sort by totalDataTransferred desc | search {selected item}",
                                        "NavigationSelect": {
                                            "NavigationQuery": "let BackupIdTypeMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | project TimeGenerated, BackupItemType_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; BackupIdTypeMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName == \"Job\" | summarize arg_max(TimeGenerated, *) by JobUniqueId_g) on BackupItemUniqueId_s | where JobOperation_s==\"Backup\" | where JobOperationSubType_s==\"Log\" | where ${DatasourceType} | summarize totalDataTransferred=sum(todouble(DataTransferredInMB_s)) by JobOperation_s | sort by totalDataTransferred desc | search {selected item}"
                                        }
                                    }
                                }
                            }, {
                                "Id": "LineChartBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Successful Backup Job Count Per Day",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Successful Backup Job Count Per Day",
                                        "Subtitle": "Filter by Datasource Type by clicking the (+) above"
                                    },
                                    "LineChart": {
                                        "Query": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where BackupItemFriendlyName_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemFriendlyName_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let SuccessfulBackupJobs = BackupIdNameMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where JobOperation_s == \"Backup\" and JobOperationSubType_s==\"Log\" |summarize arg_max(TimeGenerated, *) by JobUniqueId_g | where JobStatus_s == \"Completed\" | extend BackupItemFriendlyName=BackupItemFriendlyName_s, timeOfJob=TimeGenerated) on BackupItemUniqueId_s; SuccessfulBackupJobs | extend JobDate = format_datetime(timeOfJob, \"MM/dd/yy\") | summarize count(JobUniqueId_g) by BackupItemUniqueId_s, BackupItemFriendlyName_s, JobDate, timeOfJob | project timeOfJob, BackupItemFriendlyName_s, JobDate, SuccessfulBackupJobCount=count_JobUniqueId_g |sort by JobDate asc | summarize sum(SuccessfulBackupJobCount) by bin(timeOfJob, 1d)",
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where BackupItemFriendlyName_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemFriendlyName_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let SuccessfulBackupJobs = BackupIdNameMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where JobOperation_s == \"Backup\" and JobOperationSubType_s==\"Log\" |summarize arg_max(TimeGenerated, *) by JobUniqueId_g | where JobStatus_s == \"Completed\" | extend BackupItemFriendlyName=BackupItemFriendlyName_s, timeOfJob=TimeGenerated) on BackupItemUniqueId_s; SuccessfulBackupJobs | extend Job_Date = format_datetime(timeOfJob, \"MM/dd/yy\") | summarize count(JobUniqueId_g) by BackupItemUniqueId_s, BackupItemFriendlyName_s, Job_Date, timeOfJob | project BackupItemUniqueId_s, BackupItemFriendlyName_s, Job_Date, SuccessfulBackupJobCount=count_JobUniqueId_g |sort by Job_Date asc",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Backup Item ID",
                                            "Value": "#Successful Backup Jobs"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [{
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                }, {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                }, {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where BackupItemFriendlyName_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemFriendlyName_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let SuccessfulBackupJobs = BackupIdNameMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where JobOperation_s == \"Backup\" and JobOperationSubType_s==\"Log\" |summarize arg_max(TimeGenerated, *) by JobUniqueId_g | where JobStatus_s == \"Completed\" | extend BackupItemFriendlyName=BackupItemFriendlyName_s, timeOfJob=TimeGenerated) on BackupItemUniqueId_s; SuccessfulBackupJobs | extend Job_Date = format_datetime(timeOfJob, \"MM/dd/yy\") | summarize count(JobUniqueId_g) by BackupItemUniqueId_s, BackupItemFriendlyName_s, Job_Date, timeOfJob search {selected item}",
                                        "NavigationSelect": {
                                            "NavigationQuery": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where BackupItemFriendlyName_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemFriendlyName_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let SuccessfulBackupJobs = BackupIdNameMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where JobOperation_s == \"Backup\" and JobOperationSubType_s==\"Log\" |summarize arg_max(TimeGenerated, *) by JobUniqueId_g | where JobStatus_s == \"Completed\" | extend BackupItemFriendlyName=BackupItemFriendlyName_s, timeOfJob=TimeGenerated) on BackupItemUniqueId_s; SuccessfulBackupJobs | extend Job_Date = format_datetime(timeOfJob, \"MM/dd/yy\") | summarize count(JobUniqueId_g) by BackupItemUniqueId_s, BackupItemFriendlyName_s, Job_Date, timeOfJob search {selected item}"
                                        }
                                    }
                                }
                            }, {
                                "Id": "LineChartBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Failed Backup Job Count per day",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Failed Backup Job Count per day",
                                        "Subtitle": "Filter by Datasource Type by clicking the (+) above"
                                    },
                                    "LineChart": {
                                        "Query": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where BackupItemFriendlyName_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemFriendlyName_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let SuccessfulBackupJobs = BackupIdNameMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where JobOperation_s == \"Backup\" and JobOperationSubType_s==\"Log\" |summarize arg_max(TimeGenerated, *) by JobUniqueId_g | where JobStatus_s == \"Failed\" | extend BackupItemFriendlyName=BackupItemFriendlyName_s, timeOfJob=TimeGenerated) on BackupItemUniqueId_s; SuccessfulBackupJobs | extend JobDate = format_datetime(timeOfJob, \"MM/dd/yy\") | summarize count(JobUniqueId_g) by BackupItemUniqueId_s, BackupItemFriendlyName_s, JobDate, timeOfJob | project timeOfJob, BackupItemFriendlyName_s, JobDate, SuccessfulBackupJobCount=count_JobUniqueId_g |sort by JobDate asc | summarize sum(SuccessfulBackupJobCount) by bin(timeOfJob, 1d)",
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where BackupItemFriendlyName_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemFriendlyName_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let SuccessfulBackupJobs = BackupIdNameMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where JobOperation_s == \"Backup\" and JobOperationSubType_s==\"Log\" |summarize arg_max(TimeGenerated, *) by JobUniqueId_g | where JobStatus_s == \"Failed\" | extend BackupItemFriendlyName=BackupItemFriendlyName_s, timeOfJob=TimeGenerated) on BackupItemUniqueId_s; SuccessfulBackupJobs | extend Job_Date = format_datetime(timeOfJob, \"MM/dd/yy\") | summarize count(JobUniqueId_g) by BackupItemFriendlyName_s, BackupItemUniqueId_s, Job_Date, timeOfJob | project BackupItemUniqueId_s, BackupItemFriendlyName_s, Job_Date, SuccessfulBackupJobCount=count_JobUniqueId_g |sort by Job_Date asc",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Backup Item ID",
                                            "Value": "#Failed Jobs"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [{
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                }, {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                }, {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where BackupItemFriendlyName_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemFriendlyName_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let SuccessfulBackupJobs = BackupIdNameMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where JobOperation_s == \"Backup\" and JobOperationSubType_s==\"Log\" |summarize arg_max(TimeGenerated, *) by JobUniqueId_g | where JobStatus_s == \"Failed\" | extend BackupItemFriendlyName=BackupItemFriendlyName_s, timeOfJob=TimeGenerated) on BackupItemUniqueId_s; SuccessfulBackupJobs | extend Job_Date = format_datetime(timeOfJob, \"MM/dd/yy\") | summarize count(JobUniqueId_g) by BackupItemFriendlyName_s, Job_Date, timeOfJob | project BackupItemFriendlyName_s, Job_Date, SuccessfulBackupJobCount=count_JobUniqueId_g |sort by Job_Date asc | search {selected item}",
                                        "NavigationSelect": {
                                            "NavigationQuery": "let BackupIdNameMap = AzureDiagnostics | where Category == \"AzureBackupReport\" | where BackupItemFriendlyName_s != \"\" | where ${DatasourceType} | project TimeGenerated, BackupItemFriendlyName_s , BackupItemUniqueId_s | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s; let SuccessfulBackupJobs = BackupIdNameMap | join(AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where JobOperation_s == \"Backup\" and JobOperationSubType_s==\"Log\" |summarize arg_max(TimeGenerated, *) by JobUniqueId_g | where JobStatus_s == \"Failed\" | extend BackupItemFriendlyName=BackupItemFriendlyName_s, timeOfJob=TimeGenerated) on BackupItemUniqueId_s; SuccessfulBackupJobs | extend Job_Date = format_datetime(timeOfJob, \"MM/dd/yy\") | summarize count(JobUniqueId_g) by BackupItemFriendlyName_s, Job_Date, timeOfJob | project BackupItemFriendlyName_s, Job_Date, SuccessfulBackupJobCount=count_JobUniqueId_g |sort by Job_Date asc | search {selected item}"
                                        }
                                    }
                                }
                            }
                        ],
                        "Filters": [{
                                "FieldName": "BackupItemType_s",
                                "QueryForValues": "AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"BackupItem\" | where BackupItemType_s != \"\" | distinct BackupItemType_s",
                                "Title": "DatasourceType"
                            }
                        ],
                        "OverviewTile": {
                            "Id": "SingleQueryDonutBuilderTileV1",
                            "Type": "OverviewTile",
                            "Version": 2,
                            "Configuration": {
                                "Donut": {
                                    "Query": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\" ; Events | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName == \"Job\" and JobOperation_s == \"Backup\" and JobOperationSubType_s==\"Log\"| summarize dcount(JobUniqueId_g) by JobStatus_s",
                                    "CenterLegend": {
                                        "Text": "Total",
                                        "Operation": "Sum",
                                        "ArcsToSelect": []
                                    },
                                    "Options": {
                                        "colors": [
                                            "#00188f",
                                            "#0072c6",
                                            "#00bcf2"
                                        ],
                                        "valueColorMapping": [{
                                                "value": "Completed",
                                                "color": "#55d455"
                                            }, {
                                                "value": "Failed",
                                                "color": "#eb3c00"
                                            }, {
                                                "value": "CompletedWithWarnings",
                                                "color": "#ffb900"
                                            }
                                        ]
                                    }
                                },
                                "Advanced": {
                                    "DataFlowVerification": {
                                        "Enabled": false,
                                        "Query": "search * | limit 1 | project TimeGenerated",
                                        "Message": ""
                                    }
                                }
                            }
                        }
                    }
                }
                
            ]
        }
    ]   
}
